@import '../../styles/tools/_pxconvert.scss';

.header {
  position: relative;
  padding: rem(30) 0;
  color: rgba(var(--light-theme));
  font-weight: 600;

  &__container {
    display: flex;
  }

  &__logo {
    margin-right: auto;
  }
}

.nav {
  justify-self: end;
  padding-left: rem(30);
  color: rgb(var(--dark-theme));
  transition: transform .3s ease;

  &__list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    font-weight: 600;
    letter-spacing: rem(2);
  }

  &__item {
    font-size: rem(22);

    &:not(:last-child) {
      margin-right: rem(30);
    }
  }

  &__link {
    position: relative;
    overflow: hidden;
    border-bottom: 2px solid transparent;
    transform-origin: color, border;
    transition-timing-function: ease-in-out;
    transition-duration: .3s;

    &.active,
    &:hover {
      color: rgb(var(--primary));
      border-color: rgb(var(--primary));
    }

    &:active,
    &.focus-visible {
      color: rgb(var(--focus));
      border-color: rgb(var(--focus));
    }

    &.focus-visible {
      &::after {
        width: 100%;
      }
    }
  }
}


$burder-width: 30px;
$burder-height: 26px;
$burder-position: relative;
$burder-line-height: 2px;
$burder-line-color: rgb(var(--light-theme));
$nav-index: 5;
$nav-min-width: 350px;
$burder-mediaquery: 1024px; // if you change this value, you must also change it in scripts window.matchMedia("(max-width: 1024px)")

.burger {
  align-self: center;
  justify-self: end;
  overflow: visible;
  position: $burder-position;
  height: $burder-height;
  width: $burder-width;
  display: none;
  border: none;
  padding: 0;
  background-color: transparent;
  cursor: pointer;
  z-index: 12;
  transition: opacity .2 ease;

  &__line {
    position: absolute;
    left: 0;
    top: calc(50% - 1.5px);
    width: 100%;
    height: $burder-line-height;
    background-color: $burder-line-color;
  }

  &::after,
  &::before {
    position: absolute;
    content: '';
    width: 100%;
    height: $burder-line-height;
    left: 0;
    border-radius: 1px;
    background-color: $burder-line-color;
    transition-property: transform, top, bottom, background-color;
    transition-duration: .4s;
    transition-timing-function: ease;
  }

  &::before {
    top: 24px;
  }

  &::after {
    bottom: 24px;
  }

  &:hover,
  &.focus-visible {
    &::before {
      top: 0;
    }

    &::after {
      bottom: 0;
    }
  }

  &:active {
    opacity: .5;
  }
}

.burger.burger--active {
  .burger__line {
    transform: scaleX(0);
  }

  &::before,
  &::after {
    background-color: rgb(var(--light-theme));
    animation: burger-open .3s ease 1 forwards;
    transition-delay: .3s;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

.nav.nav--visible {
  transform: none !important;
  visibility: visible;
  display: block;
  color: rgb(var(--light-theme));
}

@keyframes burger-open {
  100% {
    top: 50%;
    bottom: auto;
  }
}

@media (max-width: $burder-mediaquery) {
  .burger {
    display: block;
  }

  .nav {
    visibility: hidden;
    transform: translateX(105%);
    right: 0;
    top: 0;
    position: absolute;
    padding: 0;
    z-index: $nav-index;
    min-width: $nav-min-width;
    overflow-y: auto;
  }

  .nav__list {
    margin: 0;
    padding: rem(50) rem(30);
    border-radius: rem(16);
    min-width: 320px;
    list-style: none;
    background-color: rgba(var(--dark-theme));
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
  }

  .nav__item:not(:last-child) {
    margin: 0;
  }

  .nav__item {
    width: 100%;
    padding: rem(12);
    font-size: rem(18);
    font-weight: 300;
    line-height: rem(22);
    text-align: left;
  }
}

